{"id":"node_modules/vega-lite/build/src/compile/data/timeunit.js","dependencies":[{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/data/timeunit.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/package.json","includedInParent":true,"mtime":1593715260815},{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":499162500000},{"name":"tslib","loc":{"line":3,"column":22},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/data/timeunit.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/tslib/tslib.es6.js"},{"name":"../../fielddef","loc":{"line":4,"column":25},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/data/timeunit.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/fielddef.js"},{"name":"../../timeunit","loc":{"line":5,"column":25},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/data/timeunit.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/timeunit.js"},{"name":"../../util","loc":{"line":6,"column":21},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/data/timeunit.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/util.js"},{"name":"./dataflow","loc":{"line":7,"column":25},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/data/timeunit.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/data/dataflow.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar fielddef_1 = require(\"../../fielddef\");\nvar timeunit_1 = require(\"../../timeunit\");\nvar util_1 = require(\"../../util\");\nvar dataflow_1 = require(\"./dataflow\");\nvar TimeUnitNode = /** @class */ (function (_super) {\n    tslib_1.__extends(TimeUnitNode, _super);\n    function TimeUnitNode(parent, formula) {\n        var _this = _super.call(this, parent) || this;\n        _this.formula = formula;\n        return _this;\n    }\n    TimeUnitNode.prototype.clone = function () {\n        return new TimeUnitNode(null, util_1.duplicate(this.formula));\n    };\n    TimeUnitNode.makeFromEncoding = function (parent, model) {\n        var formula = model.reduceFieldDef(function (timeUnitComponent, fieldDef) {\n            if (fieldDef.timeUnit) {\n                var f = fielddef_1.vgField(fieldDef);\n                timeUnitComponent[f] = {\n                    as: f,\n                    timeUnit: fieldDef.timeUnit,\n                    field: fieldDef.field\n                };\n            }\n            return timeUnitComponent;\n        }, {});\n        if (util_1.keys(formula).length === 0) {\n            return null;\n        }\n        return new TimeUnitNode(parent, formula);\n    };\n    TimeUnitNode.makeFromTransform = function (parent, t) {\n        var _a;\n        return new TimeUnitNode(parent, (_a = {},\n            _a[t.field] = {\n                as: t.as,\n                timeUnit: t.timeUnit,\n                field: t.field\n            },\n            _a));\n    };\n    TimeUnitNode.prototype.merge = function (other) {\n        this.formula = tslib_1.__assign({}, this.formula, other.formula);\n        other.remove();\n    };\n    TimeUnitNode.prototype.producedFields = function () {\n        var out = {};\n        util_1.vals(this.formula).forEach(function (f) {\n            out[f.as] = true;\n        });\n        return out;\n    };\n    TimeUnitNode.prototype.dependentFields = function () {\n        var out = {};\n        util_1.vals(this.formula).forEach(function (f) {\n            out[f.field] = true;\n        });\n        return out;\n    };\n    TimeUnitNode.prototype.assemble = function () {\n        return util_1.vals(this.formula).map(function (c) {\n            return {\n                type: 'formula',\n                as: c.as,\n                expr: timeunit_1.fieldExpr(c.timeUnit, c.field)\n            };\n        });\n    };\n    return TimeUnitNode;\n}(dataflow_1.DataFlowNode));\nexports.TimeUnitNode = TimeUnitNode;\n"},"sourceMaps":{"js":{"version":3,"file":"timeunit.js","sourceRoot":"","sources":["../../../../src/compile/data/timeunit.ts"],"names":[],"mappings":";;;AAAA,2CAAuC;AACvC,2CAAmD;AAEnD,mCAAuD;AAGvD,uCAAwC;AASxC;IAAkC,wCAAY;IAK5C,sBAAY,MAAoB,EAAU,OAAgC;QAA1E,YACE,kBAAM,MAAM,CAAC,SACd;QAFyC,aAAO,GAAP,OAAO,CAAyB;;IAE1E,CAAC;IANM,4BAAK,GAAZ;QACE,OAAO,IAAI,YAAY,CAAC,IAAI,EAAE,gBAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACzD,CAAC;IAMa,6BAAgB,GAA9B,UAA+B,MAAoB,EAAE,KAAqB;QACxE,IAAM,OAAO,GAAG,KAAK,CAAC,cAAc,CAAC,UAAC,iBAAoC,EAAE,QAAQ;YAClF,IAAI,QAAQ,CAAC,QAAQ,EAAE;gBACrB,IAAM,CAAC,GAAG,kBAAO,CAAC,QAAQ,CAAC,CAAC;gBAC5B,iBAAiB,CAAC,CAAC,CAAC,GAAG;oBACrB,EAAE,EAAE,CAAC;oBACL,QAAQ,EAAE,QAAQ,CAAC,QAAQ;oBAC3B,KAAK,EAAE,QAAQ,CAAC,KAAK;iBACtB,CAAC;aACH;YACD,OAAO,iBAAiB,CAAC;QAC3B,CAAC,EAAE,EAA6B,CAAC,CAAC;QAElC,IAAI,WAAI,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;QAED,OAAO,IAAI,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC3C,CAAC;IAEa,8BAAiB,GAA/B,UAAgC,MAAoB,EAAE,CAAoB;;QACxE,OAAO,IAAI,YAAY,CAAC,MAAM;YAC5B,GAAC,CAAC,CAAC,KAAK,IAAG;gBACT,EAAE,EAAE,CAAC,CAAC,EAAE;gBACR,QAAQ,EAAE,CAAC,CAAC,QAAQ;gBACpB,KAAK,EAAE,CAAC,CAAC,KAAK;aACf;gBACD,CAAC;IACL,CAAC;IAEM,4BAAK,GAAZ,UAAa,KAAmB;QAC9B,IAAI,CAAC,OAAO,wBAAO,IAAI,CAAC,OAAO,EAAK,KAAK,CAAC,OAAO,CAAC,CAAC;QACnD,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAEM,qCAAc,GAArB;QACE,IAAM,GAAG,GAAG,EAAE,CAAC;QAEf,WAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;YAC1B,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC;IACb,CAAC;IAEM,sCAAe,GAAtB;QACE,IAAM,GAAG,GAAG,EAAE,CAAC;QAEf,WAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;YAC1B,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC;IACb,CAAC;IAEM,+BAAQ,GAAf;QACE,OAAO,WAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC;YAC7B,OAAO;gBACL,IAAI,EAAE,SAAS;gBACf,EAAE,EAAE,CAAC,CAAC,EAAE;gBACR,IAAI,EAAE,oBAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC;aACf,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IACH,mBAAC;AAAD,CAAC,AAzED,CAAkC,uBAAY,GAyE7C;AAzEY,oCAAY","sourcesContent":["import {vgField} from '../../fielddef';\nimport {fieldExpr, TimeUnit} from '../../timeunit';\nimport {TimeUnitTransform} from '../../transform';\nimport {Dict, duplicate, keys, vals} from '../../util';\nimport {VgFormulaTransform} from '../../vega.schema';\nimport {ModelWithField} from '../model';\nimport {DataFlowNode} from './dataflow';\n\n\nexport interface TimeUnitComponent {\n  as: string;\n  timeUnit: TimeUnit;\n  field: string;\n}\n\nexport class TimeUnitNode extends DataFlowNode {\n  public clone() {\n    return new TimeUnitNode(null, duplicate(this.formula));\n  }\n\n  constructor(parent: DataFlowNode, private formula: Dict<TimeUnitComponent>) {\n    super(parent);\n  }\n\n  public static makeFromEncoding(parent: DataFlowNode, model: ModelWithField) {\n    const formula = model.reduceFieldDef((timeUnitComponent: TimeUnitComponent, fieldDef) => {\n      if (fieldDef.timeUnit) {\n        const f = vgField(fieldDef);\n        timeUnitComponent[f] = {\n          as: f,\n          timeUnit: fieldDef.timeUnit,\n          field: fieldDef.field\n        };\n      }\n      return timeUnitComponent;\n    }, {} as Dict<TimeUnitComponent>);\n\n    if (keys(formula).length === 0) {\n      return null;\n    }\n\n    return new TimeUnitNode(parent, formula);\n  }\n\n  public static makeFromTransform(parent: DataFlowNode, t: TimeUnitTransform) {\n    return new TimeUnitNode(parent, {\n      [t.field]: {\n        as: t.as,\n        timeUnit: t.timeUnit,\n        field: t.field\n      }\n    });\n  }\n\n  public merge(other: TimeUnitNode) {\n    this.formula = {...this.formula, ...other.formula};\n    other.remove();\n  }\n\n  public producedFields() {\n    const out = {};\n\n    vals(this.formula).forEach(f => {\n      out[f.as] = true;\n    });\n\n    return out;\n  }\n\n  public dependentFields() {\n    const out = {};\n\n    vals(this.formula).forEach(f => {\n      out[f.field] = true;\n    });\n\n    return out;\n  }\n\n  public assemble() {\n    return vals(this.formula).map(c => {\n      return {\n        type: 'formula',\n        as: c.as,\n        expr: fieldExpr(c.timeUnit, c.field)\n      } as VgFormulaTransform;\n    });\n  }\n}\n"]}},"error":null,"hash":"cb7388b5e136e073a020168946d49ca5","cacheData":{"env":{}}}