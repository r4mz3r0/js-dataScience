{"id":"node_modules/vega-lite/build/src/compile/legend/properties.js","dependencies":[{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/legend/properties.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/package.json","includedInParent":true,"mtime":1593715260815},{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":499162500000},{"name":"../../channel","loc":{"line":3,"column":24},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/legend/properties.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/channel.js"},{"name":"../../fielddef","loc":{"line":4,"column":25},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/legend/properties.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/fielddef.js"},{"name":"../../scale","loc":{"line":5,"column":22},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/legend/properties.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/scale.js"},{"name":"../../util","loc":{"line":6,"column":21},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/legend/properties.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/util.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar channel_1 = require(\"../../channel\");\nvar fielddef_1 = require(\"../../fielddef\");\nvar scale_1 = require(\"../../scale\");\nvar util_1 = require(\"../../util\");\nfunction values(legend, fieldDef) {\n    var vals = legend.values;\n    if (vals) {\n        return fielddef_1.valueArray(fieldDef, vals);\n    }\n    return undefined;\n}\nexports.values = values;\nfunction type(t, channel, scaleType) {\n    if (channel_1.isColorChannel(channel) && ((t === 'quantitative' && !scale_1.isBinScale(scaleType)) ||\n        (t === 'temporal' && util_1.contains(['time', 'utc'], scaleType)))) {\n        return 'gradient';\n    }\n    return undefined;\n}\nexports.type = type;\n"},"sourceMaps":{"js":{"version":3,"file":"properties.js","sourceRoot":"","sources":["../../../../src/compile/legend/properties.ts"],"names":[],"mappings":";;AAAA,yCAAsD;AACtD,2CAAoD;AAEpD,qCAAkD;AAElD,mCAAoC;AAEpC,gBAAuB,MAAc,EAAE,QAA0B;IAC/D,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;IAE3B,IAAI,IAAI,EAAE;QACR,OAAO,qBAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACnC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAPD,wBAOC;AAED,cAAqB,CAAO,EAAE,OAAgB,EAAE,SAAoB;IAClE,IACI,wBAAc,CAAC,OAAO,CAAC,IAAI,CACzB,CAAC,CAAC,KAAK,cAAc,IAAI,CAAC,kBAAU,CAAC,SAAS,CAAC,CAAC;QAChD,CAAC,CAAC,KAAK,UAAU,IAAI,eAAQ,CAAY,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC,CACtE,EACD;QACF,OAAO,UAAU,CAAC;KACnB;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAVD,oBAUC","sourcesContent":["import {Channel, isColorChannel} from '../../channel';\nimport {FieldDef, valueArray} from '../../fielddef';\nimport {Legend} from '../../legend';\nimport {isBinScale, ScaleType} from '../../scale';\nimport {Type} from '../../type';\nimport {contains} from '../../util';\n\nexport function values(legend: Legend, fieldDef: FieldDef<string>) {\n  const vals = legend.values;\n\n  if (vals) {\n    return valueArray(fieldDef, vals);\n  }\n  return undefined;\n}\n\nexport function type(t: Type, channel: Channel, scaleType: ScaleType): 'gradient' {\n  if (\n      isColorChannel(channel) && (\n        (t === 'quantitative' && !isBinScale(scaleType)) ||\n        (t === 'temporal' && contains<ScaleType>(['time', 'utc'], scaleType))\n      )\n    ) {\n    return 'gradient';\n  }\n  return undefined;\n}\n"]}},"error":null,"hash":"02c274235841b3ad55b46177dead5610","cacheData":{"env":{}}}