{"id":"node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js","dependencies":[{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/package.json","includedInParent":true,"mtime":1593715260815},{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":499162500000},{"name":"tslib","loc":{"line":3,"column":22},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/tslib/tslib.es6.js"},{"name":"./inputs","loc":{"line":4,"column":47},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/inputs.js"},{"name":"./nearest","loc":{"line":5,"column":48},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/nearest.js"},{"name":"./project","loc":{"line":6,"column":48},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/project.js"},{"name":"./scales","loc":{"line":7,"column":47},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/scales.js"},{"name":"./toggle","loc":{"line":8,"column":47},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/toggle.js"},{"name":"./translate","loc":{"line":9,"column":50},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/translate.js"},{"name":"./zoom","loc":{"line":10,"column":45},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar inputs_1 = tslib_1.__importDefault(require(\"./inputs\"));\nvar nearest_1 = tslib_1.__importDefault(require(\"./nearest\"));\nvar project_1 = tslib_1.__importDefault(require(\"./project\"));\nvar scales_1 = tslib_1.__importDefault(require(\"./scales\"));\nvar toggle_1 = tslib_1.__importDefault(require(\"./toggle\"));\nvar translate_1 = tslib_1.__importDefault(require(\"./translate\"));\nvar zoom_1 = tslib_1.__importDefault(require(\"./zoom\"));\nvar compilers = { project: project_1.default, toggle: toggle_1.default, scales: scales_1.default,\n    translate: translate_1.default, zoom: zoom_1.default, inputs: inputs_1.default, nearest: nearest_1.default };\nfunction forEachTransform(selCmpt, cb) {\n    for (var t in compilers) {\n        if (compilers[t].has(selCmpt)) {\n            cb(compilers[t]);\n        }\n    }\n}\nexports.forEachTransform = forEachTransform;\n"},"sourceMaps":{"js":{"version":3,"file":"transforms.js","sourceRoot":"","sources":["../../../../../src/compile/selection/transforms/transforms.ts"],"names":[],"mappings":";;;AAiBA,4DAA8B;AAC9B,8DAAgC;AAChC,8DAAgC;AAChC,4DAA8B;AAC9B,4DAA8B;AAC9B,kEAAoC;AACpC,wDAA0B;AAC1B,IAAM,SAAS,GAA4B,EAAC,OAAO,mBAAA,EAAE,MAAM,kBAAA,EAAE,MAAM,kBAAA;IACjE,SAAS,qBAAA,EAAE,IAAI,gBAAA,EAAE,MAAM,kBAAA,EAAE,OAAO,mBAAA,EAAC,CAAC;AAEpC,0BAAiC,OAA2B,EAAE,EAAmC;IAC/F,KAAK,IAAM,CAAC,IAAI,SAAS,EAAE;QACzB,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;YAC7B,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAClB;KACF;AACH,CAAC;AAND,4CAMC","sourcesContent":["import {SelectionDef} from '../../../selection';\nimport {Dict} from '../../../util';\nimport {VgSignal} from '../../../vega.schema';\nimport {Model} from '../../model';\nimport {UnitModel} from '../../unit';\nimport {SelectionComponent} from '../selection';\n\n\nexport interface TransformCompiler {\n  has: (selCmpt: SelectionComponent | SelectionDef) => boolean;\n  parse?: (model: UnitModel, def: SelectionDef, selCmpt: SelectionComponent) => void;\n  signals?: (model: UnitModel, selCmpt: SelectionComponent, signals: VgSignal[]) => VgSignal[];\n  topLevelSignals?: (model: Model, selCmpt: SelectionComponent, signals: VgSignal[]) => VgSignal[];\n  modifyExpr?: (model: UnitModel, selCmpt: SelectionComponent, expr: string) => string;\n  marks?: (model: UnitModel, selCmpt:SelectionComponent, marks: any[]) => any[];\n}\n\nimport inputs from './inputs';\nimport nearest from './nearest';\nimport project from './project';\nimport scales from './scales';\nimport toggle from './toggle';\nimport translate from './translate';\nimport zoom from './zoom';\nconst compilers: Dict<TransformCompiler> = {project, toggle, scales,\n  translate, zoom, inputs, nearest};\n\nexport function forEachTransform(selCmpt: SelectionComponent, cb: (tx: TransformCompiler) => void) {\n  for (const t in compilers) {\n    if (compilers[t].has(selCmpt)) {\n      cb(compilers[t]);\n    }\n  }\n}\n"]}},"error":null,"hash":"2159ea5a21228c389d5c3f1a67990dfc","cacheData":{"env":{}}}