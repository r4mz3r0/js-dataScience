{"id":"node_modules/vega-lite/build/src/compile/selection/single.js","dependencies":[{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/single.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/package.json","includedInParent":true,"mtime":1593715260815},{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":499162500000},{"name":"vega-util","loc":{"line":3,"column":26},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/single.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-util/index.js"},{"name":"./multi","loc":{"line":4,"column":22},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/single.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/multi.js"},{"name":"./selection","loc":{"line":5,"column":26},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/single.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/selection/selection.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vega_util_1 = require(\"vega-util\");\nvar multi_1 = require(\"./multi\");\nvar selection_1 = require(\"./selection\");\nvar single = {\n    predicate: 'vlSingle',\n    scaleDomain: 'vlSingleDomain',\n    signals: multi_1.signals,\n    topLevelSignals: function (model, selCmpt, signals) {\n        var hasSignal = signals.filter(function (s) { return s.name === selCmpt.name; });\n        var data = \"data(\" + vega_util_1.stringValue(selCmpt.name + selection_1.STORE) + \")\";\n        var values = data + \"[0].values\";\n        return hasSignal.length ? signals : signals.concat({\n            name: selCmpt.name,\n            update: data + \".length && {\" +\n                selCmpt.project.map(function (p, i) { return p.field + \": \" + values + \"[\" + i + \"]\"; }).join(', ') + '}'\n        });\n    },\n    modifyExpr: function (model, selCmpt) {\n        var tpl = selCmpt.name + selection_1.TUPLE;\n        return tpl + ', ' +\n            (selCmpt.resolve === 'global' ? 'true' : \"{unit: \" + selection_1.unitName(model) + \"}\");\n    }\n};\nexports.default = single;\n"},"sourceMaps":{"js":{"version":3,"file":"single.js","sourceRoot":"","sources":["../../../../src/compile/selection/single.ts"],"names":[],"mappings":";;AAAA,uCAAsC;AAEtC,iCAAgD;AAChD,yCAAsE;AAGtE,IAAM,MAAM,GAAqB;IAC/B,SAAS,EAAE,UAAU;IACrB,WAAW,EAAE,gBAAgB;IAE7B,OAAO,EAAE,eAAY;IAErB,eAAe,EAAE,UAAS,KAAK,EAAE,OAAO,EAAE,OAAO;QAC/C,IAAM,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,EAAvB,CAAuB,CAAC,CAAC;QACjE,IAAM,IAAI,GAAG,UAAQ,uBAAW,CAAC,OAAO,CAAC,IAAI,GAAG,iBAAK,CAAC,MAAG,CAAC;QAC1D,IAAM,MAAM,GAAM,IAAI,eAAY,CAAC;QACnC,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;YACjD,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,MAAM,EAAK,IAAI,iBAAc;gBAC3B,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAG,CAAC,CAAC,KAAK,UAAK,MAAM,SAAI,CAAC,MAAG,EAA7B,CAA6B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG;SAChF,CAAC,CAAC;IACL,CAAC;IAED,UAAU,EAAE,UAAS,KAAK,EAAE,OAAO;QACjC,IAAM,GAAG,GAAG,OAAO,CAAC,IAAI,GAAG,iBAAK,CAAC;QACjC,OAAO,GAAG,GAAG,IAAI;YACf,CAAC,OAAO,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,YAAU,oBAAQ,CAAC,KAAK,CAAC,MAAG,CAAC,CAAC;IAC3E,CAAC;CACF,CAAC;AAEF,kBAAe,MAAM,CAAC","sourcesContent":["import {stringValue} from 'vega-util';\n\nimport {signals as multiSignals} from './multi';\nimport {SelectionCompiler, STORE, TUPLE, unitName} from './selection';\n\n\nconst single:SelectionCompiler = {\n  predicate: 'vlSingle',\n  scaleDomain: 'vlSingleDomain',\n\n  signals: multiSignals,\n\n  topLevelSignals: function(model, selCmpt, signals) {\n    const hasSignal = signals.filter((s) => s.name === selCmpt.name);\n    const data = `data(${stringValue(selCmpt.name + STORE)})`;\n    const values = `${data}[0].values`;\n    return hasSignal.length ? signals : signals.concat({\n      name: selCmpt.name,\n      update: `${data}.length && {` +\n        selCmpt.project.map((p, i) => `${p.field}: ${values}[${i}]`).join(', ') + '}'\n    });\n  },\n\n  modifyExpr: function(model, selCmpt) {\n    const tpl = selCmpt.name + TUPLE;\n    return tpl + ', ' +\n      (selCmpt.resolve === 'global' ? 'true' : `{unit: ${unitName(model)}}`);\n  }\n};\n\nexport default single;\n"]}},"error":null,"hash":"aee2cd0d4edbbe9779b82df8a3294cdd","cacheData":{"env":{}}}