{"id":"node_modules/vega-lite/build/src/compile/mark/text.js","dependencies":[{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/mark/text.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/package.json","includedInParent":true,"mtime":1593715260815},{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":499162500000},{"name":"tslib","loc":{"line":3,"column":22},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/mark/text.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/tslib/tslib.es6.js"},{"name":"../common","loc":{"line":4,"column":23},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/mark/text.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/common.js"},{"name":"./mixins","loc":{"line":5,"column":42},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/mark/text.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/mark/mixins.js"},{"name":"./valueref","loc":{"line":6,"column":39},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/mark/text.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/mark/valueref.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar common_1 = require(\"../common\");\nvar mixins = tslib_1.__importStar(require(\"./mixins\"));\nvar ref = tslib_1.__importStar(require(\"./valueref\"));\nexports.text = {\n    vgMark: 'text',\n    encodeEntry: function (model) {\n        var config = model.config, encoding = model.encoding, width = model.width, height = model.height, markDef = model.markDef;\n        return tslib_1.__assign({}, mixins.baseEncodeEntry(model, { size: 'ignore', orient: 'ignore' }), mixins.pointPosition('x', model, ref.mid(width)), mixins.pointPosition('y', model, ref.mid(height)), mixins.text(model), mixins.nonPosition('size', model, tslib_1.__assign({}, (markDef.size ? { defaultValue: markDef.size } : {}), { vgChannel: 'fontSize' // VL's text size is fontSize\n         })), mixins.valueIfDefined('align', align(model.markDef, encoding, config)));\n    }\n};\nfunction align(markDef, encoding, config) {\n    var a = markDef.align || common_1.getMarkConfig('align', markDef, config);\n    if (a === undefined) {\n        return 'center';\n    }\n    // If there is a config, Vega-parser will process this already.\n    return undefined;\n}\n"},"sourceMaps":{"js":{"version":3,"file":"text.js","sourceRoot":"","sources":["../../../../src/compile/mark/text.ts"],"names":[],"mappings":";;;AAGA,oCAAwC;AAGxC,uDAAmC;AACnC,sDAAkC;AAGrB,QAAA,IAAI,GAAiB;IAChC,MAAM,EAAE,MAAM;IAEd,WAAW,EAAE,UAAC,KAAgB;QACrB,IAAA,qBAAM,EAAE,yBAAQ,EAAE,mBAAK,EAAE,qBAAM,EAAE,uBAAO,CAAU;QAEzD,4BACK,MAAM,CAAC,eAAe,CAAC,KAAK,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAC,CAAC,EACjE,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAChD,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EACjD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAClB,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,uBAC9B,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,YAAY,EAAE,OAAO,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IACrD,SAAS,EAAE,UAAU,CAAE,6BAA6B;YACpD,EACC,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,EACzE;IACJ,CAAC;CACF,CAAC;AACF,eAAe,OAAgB,EAAE,QAA0B,EAAE,MAAc;IACzE,IAAM,CAAC,GAAG,OAAO,CAAC,KAAK,IAAI,sBAAa,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IACnE,IAAI,CAAC,KAAK,SAAS,EAAE;QACnB,OAAO,QAAQ,CAAC;KACjB;IACD,+DAA+D;IAC/D,OAAO,SAAS,CAAC;AACnB,CAAC","sourcesContent":["import {Config} from '../../config';\nimport {Encoding} from '../../encoding';\nimport {MarkDef} from '../../mark';\nimport {getMarkConfig} from '../common';\nimport {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as mixins from './mixins';\nimport * as ref from './valueref';\n\n\nexport const text: MarkCompiler = {\n  vgMark: 'text',\n\n  encodeEntry: (model: UnitModel) => {\n    const {config, encoding, width, height, markDef} = model;\n\n    return {\n      ...mixins.baseEncodeEntry(model, {size: 'ignore', orient: 'ignore'}),\n      ...mixins.pointPosition('x', model, ref.mid(width)),\n      ...mixins.pointPosition('y', model, ref.mid(height)),\n      ...mixins.text(model),\n      ...mixins.nonPosition('size', model, {\n        ...(markDef.size ? {defaultValue: markDef.size} : {}),\n        vgChannel: 'fontSize'  // VL's text size is fontSize\n      }),\n      ...mixins.valueIfDefined('align', align(model.markDef, encoding, config))\n    };\n  }\n};\nfunction align(markDef: MarkDef, encoding: Encoding<string>, config: Config) {\n  const a = markDef.align || getMarkConfig('align', markDef, config);\n  if (a === undefined) {\n    return 'center';\n  }\n  // If there is a config, Vega-parser will process this already.\n  return undefined;\n}\n"]}},"error":null,"hash":"6ad7f7689700a06f4635050a0fd6bcf6","cacheData":{"env":{}}}