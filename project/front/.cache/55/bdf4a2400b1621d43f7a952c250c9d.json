{"id":"node_modules/vega-lite/build/src/compile/buildmodel.js","dependencies":[{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/buildmodel.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/package.json","includedInParent":true,"mtime":1593715260815},{"name":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":499162500000},{"name":"tslib","loc":{"line":3,"column":22},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/buildmodel.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/tslib/tslib.es6.js"},{"name":"../log","loc":{"line":4,"column":39},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/buildmodel.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/log.js"},{"name":"../spec","loc":{"line":5,"column":21},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/buildmodel.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/spec.js"},{"name":"./concat","loc":{"line":6,"column":23},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/buildmodel.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/concat.js"},{"name":"./facet","loc":{"line":7,"column":22},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/buildmodel.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/facet.js"},{"name":"./layer","loc":{"line":8,"column":22},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/buildmodel.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/layer.js"},{"name":"./repeat","loc":{"line":9,"column":23},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/buildmodel.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/repeat.js"},{"name":"./unit","loc":{"line":10,"column":21},"parent":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/buildmodel.js","resolved":"/home/ramsiro/Desktop/JavaScriptDataScience/js-dataScience/project/front/node_modules/vega-lite/build/src/compile/unit.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar log = tslib_1.__importStar(require(\"../log\"));\nvar spec_1 = require(\"../spec\");\nvar concat_1 = require(\"./concat\");\nvar facet_1 = require(\"./facet\");\nvar layer_1 = require(\"./layer\");\nvar repeat_1 = require(\"./repeat\");\nvar unit_1 = require(\"./unit\");\nfunction buildModel(spec, parent, parentGivenName, unitSize, repeater, config, fit) {\n    if (spec_1.isFacetSpec(spec)) {\n        return new facet_1.FacetModel(spec, parent, parentGivenName, repeater, config);\n    }\n    if (spec_1.isLayerSpec(spec)) {\n        return new layer_1.LayerModel(spec, parent, parentGivenName, unitSize, repeater, config, fit);\n    }\n    if (spec_1.isUnitSpec(spec)) {\n        return new unit_1.UnitModel(spec, parent, parentGivenName, unitSize, repeater, config, fit);\n    }\n    if (spec_1.isRepeatSpec(spec)) {\n        return new repeat_1.RepeatModel(spec, parent, parentGivenName, repeater, config);\n    }\n    if (spec_1.isConcatSpec(spec)) {\n        return new concat_1.ConcatModel(spec, parent, parentGivenName, repeater, config);\n    }\n    throw new Error(log.message.INVALID_SPEC);\n}\nexports.buildModel = buildModel;\n"},"sourceMaps":{"js":{"version":3,"file":"buildmodel.js","sourceRoot":"","sources":["../../../src/compile/buildmodel.ts"],"names":[],"mappings":";;;AACA,kDAA8B;AAC9B,gCAA2H;AAC3H,mCAAqC;AACrC,iCAAmC;AACnC,iCAAmC;AAEnC,mCAAqC;AAErC,+BAAiC;AAEjC,oBAA2B,IAAoB,EAAE,MAAa,EAAE,eAAuB,EACrF,QAA0B,EAAE,QAAuB,EAAE,MAAc,EAAE,GAAY;IACjF,IAAI,kBAAW,CAAC,IAAI,CAAC,EAAE;QACrB,OAAO,IAAI,kBAAU,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;KACxE;IAED,IAAI,kBAAW,CAAC,IAAI,CAAC,EAAE;QACrB,OAAO,IAAI,kBAAU,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;KACvF;IAED,IAAI,iBAAU,CAAC,IAAI,CAAC,EAAE;QACpB,OAAO,IAAI,gBAAS,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;KACtF;IAED,IAAI,mBAAY,CAAC,IAAI,CAAC,EAAE;QACtB,OAAO,IAAI,oBAAW,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;KACzE;IAED,IAAI,mBAAY,CAAC,IAAI,CAAC,EAAE;QACtB,OAAO,IAAI,oBAAW,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;KACzE;IAED,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AAC5C,CAAC;AAvBD,gCAuBC","sourcesContent":["import {Config} from '../config';\nimport * as log from '../log';\nimport {isConcatSpec, isFacetSpec, isLayerSpec, isRepeatSpec, isUnitSpec, LayoutSizeMixins, NormalizedSpec} from '../spec';\nimport {ConcatModel} from './concat';\nimport {FacetModel} from './facet';\nimport {LayerModel} from './layer';\nimport {Model} from './model';\nimport {RepeatModel} from './repeat';\nimport {RepeaterValue} from './repeater';\nimport {UnitModel} from './unit';\n\nexport function buildModel(spec: NormalizedSpec, parent: Model, parentGivenName: string,\n  unitSize: LayoutSizeMixins, repeater: RepeaterValue, config: Config, fit: boolean): Model {\n  if (isFacetSpec(spec)) {\n    return new FacetModel(spec, parent, parentGivenName, repeater, config);\n  }\n\n  if (isLayerSpec(spec)) {\n    return new LayerModel(spec, parent, parentGivenName, unitSize, repeater, config, fit);\n  }\n\n  if (isUnitSpec(spec)) {\n    return new UnitModel(spec, parent, parentGivenName, unitSize, repeater, config, fit);\n  }\n\n  if (isRepeatSpec(spec)) {\n    return new RepeatModel(spec, parent, parentGivenName, repeater, config);\n  }\n\n  if (isConcatSpec(spec)) {\n    return new ConcatModel(spec, parent, parentGivenName, repeater, config);\n  }\n\n  throw new Error(log.message.INVALID_SPEC);\n}\n"]}},"error":null,"hash":"29d7ca49da19e07c0a20978d894bff25","cacheData":{"env":{}}}